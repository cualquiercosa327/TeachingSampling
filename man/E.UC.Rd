% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/E.UC.R
\name{E.UC}
\alias{E.UC}
\title{Estimation of the Population Total and its variance using the Ultimate Cluster technique}
\usage{
E.UC(S, PSU, dk, y)
}
\arguments{
\item{S}{Vector identifying the membership to the strata of each unit in selected sample.}

\item{PSU}{Vector identifying the membership to the strata of 
each unit in the population.}

\item{dk}{Sampling weights of the units in the sample.}

\item{y}{Vector, matrix or data frame containig the recollected 
information of the variables of interest for every unit in the 
selected sample.}
}
\value{
This function returns the estimation of the population total of 
every single variable of interest, its estimated standard error 
and its estimated coefficient of variation.
}
\description{
This function computes a weighted estimator of the population total and
estimates its variance by using the Ultimate Cluster technique. This approximation
performs well in many sampling designs. The user specifically needs to
declare the variables of interest, the primary sampling units, the strata, and 
the sampling weights for every singlt unit in the sample.
}
\details{
The function returns a data matrix whose columns correspond to 
the estimated parameters of the variables of interest.
}
\examples{

#############################
## Example 1: Two-stage SI ##
#############################

data('BigCity')
FrameI <- BigCity \%>\% group_by(PSU) \%>\%
summarise(Stratum = unique(Stratum),
          Persons = n(),
          Income = sum(Income),
          Expenditure = sum(Expenditure))
            
attach(FrameI)

sizes = FrameI \%>\% group_by(Stratum) \%>\%
        summarise(NIh = n(),
        mIh = 2,
        dI = NIh/mIh)
        
NIh <- sizes$NIh
mIh <- sizes$mIh

samI <- S.STSI(Stratum, NIh, mIh)
UI <- levels(as.factor(FrameI$PSU))
sampleI <- UI[samI]
          
FrameII <- left_join(sizes, BigCity[which(BigCity$PSU \%in\% sampleI), ])
attach(FrameII)

Ni <- as.vector(table(FrameII$PSU))
ni <- ceiling(Ni * 0.15)
ni
sum(ni)

sam = S.SI(Ni[1], ni[1])
cluster = FrameII[which(FrameII$PSU == sampleI[1]), ]
cluster$dki <- Ni[1]/ni[1]
data = cluster[sam, ]
for (i in 2:length(Ni)) {
      sam = S.SI(Ni[i], ni[i])
      cluster = FrameII[which(FrameII$PSU == sampleI[i]), ]
      cluster$dki <- Ni[i]/ni[i]
      data1 = cluster[sam, ]
      data = rbind(data, data1)
}

data$dk <- data$dI * data$dki
sum(data$dk)
attach(data)
estima <- data.frame(Income, Expenditure)
area <- as.factor(PSU)
stratum <- as.factor(Stratum)

E.UC(stratum, area, dk, estima)
}
\references{
Sarndal, C-E. and Swensson, B. and Wretman, J. (1992), \emph{Model Assisted Survey Sampling}. Springer.\cr
Gutierrez, H. A. (2009), \emph{Estrategias de muestreo: Diseno de encuestas y estimacion de parametros}. Editorial Universidad Santo Tomas
}
\seealso{
\code{\link{E.2SI}}
}
\author{
Hsugo Andres Gutierrez Rojas <hugogutierrez at gmail.com>
}
